{"version":3,"sources":["Components/Todo/TodoItem.js","Components/Todo/TodoItemList.js","Components/Modal/Modal.js","Components/DayBox.js","Components/WeekBox.js","Components/Calander.js","Components/CalanderPlate.js","App.js","index.js"],"names":["Item","styled","div","Remove","TodoText","Mark","TodoItem","text","checked","id","onToggle","onRemove","className","onClick","e","stopPropagation","Container","TodoItemList","todos","map","key","Overlay","ModalPlate","ModalTitle","p","Content","BtnWrap","InputWrap","AddTodoBtn","button","Modal","selDate","isOpen","close","useState","state","setState","todoInput","useRef","ref","required","current","value","concat","index","findIndex","todo","selected","nextTodos","filter","props","fill","DayBox","NowD","NowM","NowY","NowDate","children","WeekBox","MakeWeek","day","Calander","NowMonth","NowYear","D","Array","i","Date","getDay","getDate","push","MakeDate","date","MonthSection","CalanderSection","ButtonSection","Btn","CalanderPlate","Now","getMonth","month","setMonth","getFullYear","year","setYear","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f58826b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./TodoItem.css\";\r\n\r\nconst Item = styled.div``;\r\nconst Remove = styled.div``;\r\nconst TodoText = styled.div``;\r\nconst Mark = styled.div``;\r\n\r\nconst TodoItem = ({ text, checked, id, onToggle, onRemove }) => {\r\n  return (\r\n    <Item className=\"todo-item\" onClick={() => onToggle(id)}>\r\n      <Remove\r\n        className=\"remove\"\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          onRemove(id);\r\n        }}\r\n      >\r\n        &times;\r\n      </Remove>\r\n      <TodoText className={`todo-text ${checked ? ` checked` : \"\"}`}>\r\n        <div>{text}</div>\r\n      </TodoText>\r\n      {checked && <Mark className=\"check-mark\">√</Mark>}\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst TodoItemList = ({ todos, onToggle, onRemove }) => {\r\n  return (\r\n    <Container>\r\n      {todos.map(\r\n        ({ id, text, checked }) => (\r\n          <TodoItem\r\n            key={id}\r\n            id={id}\r\n            text={text}\r\n            checked={checked}\r\n            onToggle={onToggle}\r\n            onRemove={onRemove}\r\n          />\r\n        ),\r\n        []\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TodoItemList;\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoItemList from \"../Todo/TodoItemList\";\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\nconst ModalPlate = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 340px;\r\n  border-radius: 6px;\r\n  background-color: rgb(250, 250, 250);\r\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.09);\r\n  & > * {\r\n    &:first-child {\r\n      margin-top: 16px;\r\n    }\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n  }\r\n`;\r\nconst ModalTitle = styled.p`\r\n  font-size: 16pt;\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\nconst Content = styled.div`\r\n  border-top: 2px solid #bebebe;\r\n  margin-top: 16px;\r\n  p {\r\n    padding: 8px;\r\n    font-size: 12pt;\r\n    color: #999;\r\n  }\r\n  height: 200px;\r\n  overflow: auto;\r\n`;\r\nconst BtnWrap = styled.div`\r\n  margin: 0;\r\n  margin-top: 8px;\r\n  button {\r\n    width: 100%;\r\n    padding: 5px 0;\r\n    border-radius: 0 0 6px 6px;\r\n    background-color: #a09f9d;\r\n    font-size: 13pt;\r\n    color: white;\r\n    border: 0;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #605f5e;\r\n    }\r\n    &:active {\r\n      background-color: #605f5e;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputWrap = styled.div`\r\n  font-weight: 600;\r\n  padding: 0px 10px;\r\n  margin-top: 16px;\r\n`;\r\nconst AddTodoBtn = styled.button`\r\n  margin-left: 6px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 3px 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  background-color: #a09f9d;\r\n  &:hover {\r\n    background-color: #605f5e;\r\n  }\r\n`;\r\n\r\nconst Modal = ({ selDate, isOpen, close }) => {\r\n  const [state, setState] = useState({\r\n    id: 0,\r\n    todos: []\r\n  });\r\n\r\n  const todoInput = useRef();\r\n\r\n  const addTodo = () => {\r\n    if (todoInput.current.value !== \"\") {\r\n      setState({\r\n        todos: state.todos.concat({\r\n          id: state.id,\r\n          text: todoInput.current.value,\r\n          checked: false\r\n        }),\r\n        id: state.id + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleToggle = id => {\r\n    const { todos } = state;\r\n    const index = todos.findIndex(todo => todo.id === id);\r\n    const selected = todos[index];\r\n    const nextTodos = [...todos];\r\n\r\n    nextTodos[index] = {\r\n      ...selected,\r\n      checked: !selected.checked\r\n    };\r\n\r\n    setState({\r\n      todos: nextTodos,\r\n      id: state.id\r\n    });\r\n  };\r\n\r\n  const handleRemove = id => {\r\n    const { todos } = state;\r\n    setState({\r\n      todos: todos.filter(todo => todo.id !== id),\r\n      id: state.id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen ? (\r\n        <>\r\n          <Overlay onClick={close} />\r\n          <ModalPlate>\r\n            <ModalTitle>{selDate}일정</ModalTitle>\r\n            <InputWrap>\r\n              할일 <input ref={todoInput} required />\r\n              <AddTodoBtn onClick={addTodo}>추가</AddTodoBtn>\r\n            </InputWrap>\r\n            <Content>\r\n              <TodoItemList\r\n                todos={state.todos}\r\n                onToggle={handleToggle}\r\n                onRemove={handleRemove}\r\n              />\r\n            </Content>\r\n            <BtnWrap>\r\n              <button onClick={close}>닫기</button>\r\n            </BtnWrap>\r\n          </ModalPlate>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Container = styled.div`\r\n  ${props => {\r\n    if (props.fill) {\r\n      return `\r\n        &:hover {\r\n          cursor: pointer;\r\n          background-color: rgba(100, 100, 100, 0.18);\r\n        }\r\n        `;\r\n    }\r\n  }}\r\n  @media screen and (min-width: 769px) {\r\n    border: 2px solid black;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    border: 2px solid black;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nconst DayBox = ({ NowD, NowM, NowY }) => {\r\n  const NowDate = `${NowY}-${NowM}-${NowD < 10 ? `0${NowD}` : NowD}`;\r\n\r\n  const [state, setState] = useState({\r\n    isOpen: false\r\n  });\r\n\r\n  const openModal = () => {\r\n    setState({\r\n      isOpen: true\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setState({\r\n      isOpen: false\r\n    });\r\n  };\r\n  return NowD <= 0 ? (\r\n    <Container>{\"   \"}</Container>\r\n  ) : (\r\n    <>\r\n      <Container fill=\"true\" onClick={openModal}>\r\n        {NowD < 10 ? `0${NowD}` : NowD}일\r\n      </Container>\r\n      <Modal selDate={NowDate} isOpen={state.isOpen} close={closeModal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => {\r\n    if (props.children === \"일\") return \"#E1979E\";\r\n    else if (props.children === \"토\") return \"#97a0e1\";\r\n    else return \"#D8D8D8\";\r\n  }};\r\n  @media screen and (min-width: 769px) {\r\n    border: 2px solid black;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    border: 2px solid black;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nconst WeekBox = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default WeekBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DayBox from \"./DayBox\";\r\nimport WeekBox from \"./WeekBox\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\nconst MakeDate = (NowM, NowY) => {\r\n  let D = new Array(0);\r\n  for (\r\n    let i = 1 - new Date(`${NowY}-${NowM}-01`).getDay();\r\n    i <= new Date(NowY, NowM, 0).getDate();\r\n    i++\r\n  ) {\r\n    D.push(i);\r\n  }\r\n  return D;\r\n};\r\n\r\nconst MakeWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map(day => (\r\n  <WeekBox key={day}>{day}</WeekBox>\r\n));\r\n\r\nconst Calander = ({ NowMonth, NowYear }) => {\r\n  return (\r\n    <Container>\r\n      {MakeWeek}\r\n      {MakeDate(NowMonth, NowYear).map((date, index) => (\r\n        <DayBox NowD={date} key={index} NowM={NowMonth} NowY={NowYear} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calander;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Calander from \"./Calander\";\r\n\r\nconst Container = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    display: grid;\r\n    grid-template-rows: 30px auto 25px;\r\n    padding: 10px 16px;\r\n    background-color: #acacac;\r\n    width: 600px;\r\n    height: 400px;\r\n    position: relative;\r\n    margin: 10% auto;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: grid;\r\n    grid-template-rows: 30px auto 25px;\r\n    padding: 10px 16px;\r\n    background-color: #acacac;\r\n    width: 400px;\r\n    height: 350px;\r\n    position: relative;\r\n    margin: 10% auto;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst MonthSection = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    background-color: rgba(0, 0, 0, 0.65);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    font-weight: 600;\r\n    font-size: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    background-color: rgba(0, 0, 0, 0.65);\r\n  }\r\n`;\r\n\r\nconst CalanderSection = styled.div`\r\n  background-color: white;\r\n  padding: 4px 8px;\r\n`;\r\n\r\nconst ButtonSection = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    background-color: rgba(100, 100, 100, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    background-color: rgba(100, 100, 100, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Btn = styled.div`\r\n  display: inline-block;\r\n  height: 16px;\r\n  width: 20px;\r\n  background-color: white;\r\n  margin-right: 3px;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #cccccc;\r\n    box-shadow: 1px 1px 1px black;\r\n  }\r\n`;\r\n\r\nconst CalanderPlate = () => {\r\n  const Now = new Date();\r\n  const [month, setMonth] = useState(Now.getMonth() + 1);\r\n  const [year, setYear] = useState(Now.getFullYear());\r\n  const Next = () => {\r\n    setMonth((month % 12) + 1);\r\n    if (month + 1 > 12) setYear(year + 1);\r\n  };\r\n  const Prev = () => {\r\n    if (month - 1 <= 0) {\r\n      setYear(year - 1);\r\n      setMonth(12);\r\n    } else {\r\n      setMonth(month - 1);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <MonthSection>\r\n        {year}년 {month < 10 ? `0${month}` : month}월\r\n      </MonthSection>\r\n      <CalanderSection>\r\n        <Calander NowMonth={month < 10 ? `0${month}` : month} NowYear={year} />\r\n      </CalanderSection>\r\n      <ButtonSection>\r\n        <Btn onClick={Prev}> ◀ </Btn>\r\n        <Btn onClick={Next}> ▶ </Btn>\r\n      </ButtonSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CalanderPlate;\r\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport CalanderPlate from './Components/CalanderPlate';\n\nexport const GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n  }\n    \n  body,html {\n    width: 100%;\n    height: 100%;\n    background-color:#E9DFF2;\n  }\n`;\n\nconst Container = styled.div``;\n\nfunction App() {\n  return (\n    <Container>\n      <GlobalStyle />\n      <CalanderPlate/>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}