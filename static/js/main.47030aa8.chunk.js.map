{"version":3,"sources":["Components/Modal/Modal.js","Components/DayBox.js","Components/WeekBox.js","Components/Calander.js","Components/CalanderPlate.js","App.js","index.js"],"names":["Overlay","styled","div","ModalPlate","ModalTitle","p","Content","BtnWrap","InputWrap","AddTodoBtn","button","TodoInput","textarea","Item","TodoText","DeleteBtn","Modal","selDate","isOpen","close","TodoDB","Dexie","version","stores","todos","open","catch","err","console","log","stack","postData","useState","todo","setTodo","posts","setPosts","inputarea","useRef","deletePost","id","a","delete","where","equals","toArray","allPosts","useEffect","getPosts","length","map","post","key","text","onClick","onChange","e","target","value","maxLength","ref","preventDefault","date","add","then","current","Container","props","fill","DayBox","NowD","NowM","NowY","NowDate","state","setState","children","WeekBox","Calander","NowMonth","NowYear","calander","setCalander","week","setWeek","weekline","day","PrintWeek","currentCalander","D","Array","i","Date","getDay","getDate","push","MakeDate","index","PrintDate","MonthSection","CalanderSection","ButtonSection","Btn","CalanderPlate","Now","getMonth","month","setMonth","getFullYear","year","setYear","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47030aa8.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Dexie from 'dexie';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\nconst ModalPlate = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 340px;\r\n  border-radius: 6px;\r\n  background-color: rgb(250, 250, 250);\r\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.09);\r\n  & > * {\r\n    &:first-child {\r\n      margin-top: 16px;\r\n    }\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n  }\r\n`;\r\nconst ModalTitle = styled.p`\r\n  font-size: 16pt;\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\nconst Content = styled.div`\r\n  border-top: 2px solid #bebebe;\r\n  margin-top: 16px;\r\n  p {\r\n    padding: 8px;\r\n    font-size: 12pt;\r\n    color: #999;\r\n  }\r\n  height: 200px;\r\n  overflow: auto;\r\n`;\r\nconst BtnWrap = styled.div`\r\n  margin: 0;\r\n  margin-top: 8px;\r\n  button {\r\n    width: 100%;\r\n    padding: 5px 0;\r\n    border-radius: 0 0 6px 6px;\r\n    background-color: #a09f9d;\r\n    font-size: 13pt;\r\n    color: white;\r\n    border: 0;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: #605f5e;\r\n    }\r\n    &:active {\r\n      background-color: #605f5e;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputWrap = styled.div`\r\n  display:flex;\r\n  font-weight: 600;\r\n  padding: 0px 10px;\r\n  margin-top: 16px;\r\n`;\r\n\r\nconst AddTodoBtn = styled.button`\r\n  margin-left: 6px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 3px 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  background-color: #a09f9d;\r\n  &:hover {\r\n    background-color: #605f5e;\r\n  }\r\n`;\r\n\r\nconst TodoInput = styled.textarea`\r\n  width: 230px;\r\n  height: 48px;\r\n  resize: none;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display:grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  &:not(:first-child){\r\n    margin-top:16px;\r\n  }\r\n`;\r\n\r\nconst TodoText = styled.div`\r\n  padding:4px 16px;\r\n`;\r\n\r\nconst DeleteBtn = styled.div`\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  margin: auto;\r\n  width:20px;\r\n  height:20px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color:rgba(0,0,0,0.15);\r\n  }\r\n`;\r\n\r\nconst Modal = ({ selDate, isOpen, close }) => {\r\n  const TodoDB = new Dexie(\"TodoDB\");\r\n\r\n  TodoDB.version(1).stores({\r\n    todos: \"++id, text, date\"\r\n  })\r\n  TodoDB.open().catch((err)=>{\r\n    console.log(err.stack || err)\r\n  })\r\n\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [posts, setPosts] = useState(\"\");\r\n  const inputarea = useRef();\r\n\r\n  const getPostInfo = e => {\r\n    e.preventDefault();\r\n    if (todo !== \"\") {\r\n      let todos = {\r\n        text: todo,\r\n        date: selDate\r\n      };\r\n      TodoDB.todos.add(todos).then(async () => {\r\n        let allPosts = await TodoDB.todos\r\n          .where(\"date\")\r\n          .equals(selDate)\r\n          .toArray();\r\n\r\n        setPosts(allPosts);\r\n      });\r\n      inputarea.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const deletePost = async id => {\r\n    TodoDB.todos.delete(id);\r\n    let allPosts = await TodoDB.todos\r\n      .where(\"date\")\r\n      .equals(selDate)\r\n      .toArray();\r\n    setPosts(allPosts);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const getPosts = async() => {\r\n      let allPosts = await TodoDB.todos\r\n        .where(\"date\")\r\n        .equals(selDate)\r\n        .toArray();\r\n\r\n      setPosts(allPosts)\r\n    }\r\n    getPosts();\r\n  },[selDate])\r\n\r\n  let postData;\r\n\r\n  if (posts.length > 0) {\r\n    postData = (\r\n      <div>\r\n        {posts.map(post => (\r\n          <Item key={post.id}>\r\n            <TodoText>{post.text}</TodoText>\r\n            <DeleteBtn\r\n              onClick={() => {\r\n                deletePost(post.id);\r\n              }}\r\n            >\r\n              &times;\r\n            </DeleteBtn>\r\n          </Item>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    postData = <TodoText>저장된 일정이 없습니다.</TodoText>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isOpen ? (\r\n        <>\r\n          <Overlay onClick={close} />\r\n          <ModalPlate>\r\n            <ModalTitle>{selDate}일정</ModalTitle>\r\n            <InputWrap>\r\n            <TodoInput\r\n                onChange={e => setTodo(e.target.value)}\r\n                maxLength={42}\r\n                ref={inputarea}\r\n              />\r\n              <AddTodoBtn onClick={getPostInfo}>추가</AddTodoBtn>\r\n            </InputWrap>\r\n            <Content>\r\n              {postData}\r\n            </Content>\r\n            <BtnWrap>\r\n              <button onClick={close}>닫기</button>\r\n            </BtnWrap>\r\n          </ModalPlate>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst Container = styled.div`\r\n  ${props => {\r\n    if (props.fill) {\r\n      return `\r\n        &:hover {\r\n          cursor: pointer;\r\n          background-color: rgba(100, 100, 100, 0.18);\r\n        }\r\n        `;\r\n    }\r\n  }}\r\n  @media screen and (min-width: 769px) {\r\n    border: 2px solid black;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    border: 2px solid black;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nconst DayBox = ({ NowD, NowM, NowY }) => {\r\n  const NowDate = `${NowY}-${NowM}-${NowD < 10 ? `0${NowD}` : NowD}`;\r\n\r\n  const [state, setState] = useState({\r\n    isOpen: false\r\n  });\r\n\r\n  const openModal = () => {\r\n    setState({\r\n      isOpen: true\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setState({\r\n      isOpen: false\r\n    });\r\n  };\r\n  \r\n  return NowD <= 0 ? (\r\n    <Container>{\"   \"}</Container>\r\n  ) : (\r\n    <>\r\n      <Container fill=\"true\" onClick={openModal}>\r\n        {NowD < 10 ? `0${NowD}` : NowD}일\r\n      </Container>\r\n      <Modal selDate={NowDate} isOpen={state.isOpen} close={closeModal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DayBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background-color: ${props => {\r\n    if (props.children === \"일\") return \"#E1979E\";\r\n    else if (props.children === \"토\") return \"#97a0e1\";\r\n    else return \"#D8D8D8\";\r\n  }};\r\n  @media screen and (min-width: 769px) {\r\n    border: 2px solid black;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    border: 2px solid black;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\nconst WeekBox = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default WeekBox;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DayBox from \"./DayBox\";\r\nimport WeekBox from \"./WeekBox\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n`;\r\nconst MakeDate = (NowM, NowY) => {\r\n  let D = new Array(0);\r\n  for (\r\n    let i = 1 - new Date(`${NowY}-${NowM}-01`).getDay();\r\n    i <= new Date(NowY, NowM, 0).getDate();\r\n    i++\r\n  ) {\r\n    D.push(i);\r\n  }\r\n  return D;\r\n};\r\n\r\nconst Calander = ({ NowMonth, NowYear }) => {\r\n  const [calander, setCalander] = useState(\"\");\r\n  const [week, setWeek] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    const PrintWeek = () => {\r\n      let weekline = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"].map(day => (\r\n        <WeekBox key={day}>{day}</WeekBox>\r\n      ));\r\n      setWeek(weekline);\r\n    }\r\n    PrintWeek();\r\n    return ()=>{\r\n      setWeek(null);\r\n      setCalander(null);\r\n    }\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    const PrintDate = () => { \r\n      let currentCalander = MakeDate(NowMonth, NowYear).map((date, index) => (\r\n        <DayBox NowD={date} key={index} NowM={NowMonth} NowY={NowYear} />\r\n      ))\r\n      setCalander(currentCalander);\r\n    }\r\n    PrintDate();\r\n  },[NowMonth,NowYear])\r\n\r\n  return (\r\n    <Container>\r\n      {week}\r\n      {calander}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calander;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Calander from \"./Calander\";\r\n\r\nconst Container = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    display: grid;\r\n    grid-template-rows: 30px auto 25px;\r\n    padding: 10px 16px;\r\n    background-color: #acacac;\r\n    width: 600px;\r\n    height: 400px;\r\n    position: relative;\r\n    margin: 10% auto;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: grid;\r\n    grid-template-rows: 30px auto 25px;\r\n    padding: 10px 16px;\r\n    background-color: #acacac;\r\n    width: 400px;\r\n    height: 350px;\r\n    position: relative;\r\n    margin: 10% auto;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst MonthSection = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    background-color: rgba(0, 0, 0, 0.65);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    font-weight: 600;\r\n    font-size: 13px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    background-color: rgba(0, 0, 0, 0.65);\r\n  }\r\n`;\r\n\r\nconst CalanderSection = styled.div`\r\n  background-color: white;\r\n  padding: 4px 8px;\r\n`;\r\n\r\nconst ButtonSection = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    background-color: rgba(100, 100, 100, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    background-color: rgba(100, 100, 100, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Btn = styled.div`\r\n  display: inline-block;\r\n  height: 16px;\r\n  width: 20px;\r\n  background-color: white;\r\n  margin-right: 3px;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #cccccc;\r\n    box-shadow: 1px 1px 1px black;\r\n  }\r\n`;\r\n\r\nconst CalanderPlate = () => {\r\n  const Now = new Date();\r\n  const [month, setMonth] = useState(Now.getMonth() + 1);\r\n  const [year, setYear] = useState(Now.getFullYear());\r\n  const Next = () => {\r\n    setMonth((month % 12) + 1);\r\n    if (month + 1 > 12) setYear(year + 1);\r\n  };\r\n  const Prev = () => {\r\n    if (month - 1 <= 0) {\r\n      setYear(year - 1);\r\n      setMonth(12);\r\n    } else {\r\n      setMonth(month - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <MonthSection>\r\n        {year}년 {month < 10 ? `0${month}` : month}월\r\n      </MonthSection>\r\n      <CalanderSection>\r\n        <Calander NowMonth={month < 10 ? `0${month}` : month} NowYear={year} />\r\n      </CalanderSection>\r\n      <ButtonSection>\r\n        <Btn onClick={Prev}> ◀ </Btn>\r\n        <Btn onClick={Next}> ▶ </Btn>\r\n      </ButtonSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CalanderPlate;\r\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport CalanderPlate from './Components/CalanderPlate';\n\nexport const GlobalStyle = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n  }\n    \n  body,html {\n    width: 100%;\n    height: 100%;\n    background-color:#E9DFF2;\n  }\n`;\n\nconst Container = styled.div``;\n\nfunction App() {\n  return (\n    <Container>\n      <GlobalStyle />\n      <CalanderPlate/>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}